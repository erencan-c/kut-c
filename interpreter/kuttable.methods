/* ANSI-C code produced by gperf version 3.1 */
/* Command-line: gperf --output-file interpreter/kuttable.methods interpreter/kuttable.gperf  */
/* Computed positions: -k'' */

#line 9 "interpreter/kuttable.gperf"
struct KutDispatchGperfPair;
#include <string.h>

#define TOTAL_KEYWORDS 3
#define MIN_WORD_LENGTH 3
#define MAX_WORD_LENGTH 11
#define MIN_HASH_VALUE 3
#define MAX_HASH_VALUE 11
/* maximum key range = 9, duplicates = 0 */

#ifdef __GNUC__
__inline
#else
#ifdef __cplusplus
inline
#endif
#endif
/*ARGSUSED*/
static unsigned int
kuttable_dispatchHash (register const char *str, register size_t len)
{
  return len;
}

const struct KutDispatchGperfPair *
kuttable_dispatchLookup (register const char *str, register size_t len)
{
  static const unsigned char lengthtable[] =
    {
       0,  0,  0,  3,  4,  0,  0,  0,  0,  0,  0, 11
    };
  static const struct KutDispatchGperfPair wordlist[] =
    {
      {"",empty_dispatched}, {"",empty_dispatched},
      {"",empty_dispatched},
#line 13 "interpreter/kuttable.gperf"
      {"sil", kuttable_delete},
#line 11 "interpreter/kuttable.gperf"
      {"ekle", kuttable_insert},
      {"",empty_dispatched}, {"",empty_dispatched},
      {"",empty_dispatched}, {"",empty_dispatched},
      {"",empty_dispatched}, {"",empty_dispatched},
#line 12 "interpreter/kuttable.gperf"
      {"sonuna-ekle", kuttable_append}
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      register unsigned int key = kuttable_dispatchHash (str, len);

      if (key <= MAX_HASH_VALUE)
        if (len == lengthtable[key])
          {
            register const char *s = wordlist[key].name;

            if (*str == *s && !memcmp (str + 1, s + 1, len - 1))
              return &wordlist[key];
          }
    }
  return 0;
}
